.galleryTrigger {
  --row-h: 140px;
  cursor: pointer;
  display: flex;
  /* Ensure a strict two-column row layout even if parent styles try to override */
  flex-direction: row !important;
  align-items: stretch;
  justify-content: space-between;
  width: 100%;
  flex: 0 1 auto;
  min-height: var(--row-h);
  transition: transform 0.2s ease;
  flex-wrap: nowrap;
  gap: 12px;
  padding: 20px;
  box-sizing: border-box;
  background-color: #111;
  border-radius: 32px;
}

/* Two columns inside the trigger */
.titleColumn,
.thumbsColumn {
  width: auto;
  max-width: 100%;
  box-sizing: border-box;
}

.titleColumn {
  display: flex;
  flex-direction: column;
  justify-content: flex-start; /* align title to top */
  padding-right: 12px;
  flex: 0 0 clamp(220px, 38%, 320px);
}

.thumbsColumn {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  padding-left: 12px;
  min-height: 56px;
  flex: 1 1 62%;
}



.topRow {
  display: flex;
  align-items: center;
}

.galleryCount {
  margin-left: 8px;
  font-size: 0.85rem;
  letter-spacing: 0.04em;
  text-transform: uppercase;
  color: rgba(255, 255, 255, 0.55);
}

.galleryHelperText {
  margin-top: 6px;
  font-size: 0.78rem;
  line-height: 1.35;
  color: rgba(255, 255, 255, 0.55);
}

.selectionHint {
  margin-top: 10px;
  font-size: 0.75rem;
  line-height: 1.4;
  color: rgba(250, 51, 86, 0.85);
}

.clientBadge {
  margin-left: auto;
  padding: 4px 10px;
  border-radius: 999px;
  background: rgba(110, 123, 255, 0.15);
  color: rgba(255, 255, 255, 0.8);
  font-size: 0.68rem;
  letter-spacing: 0.06em;
  text-transform: uppercase;
  font-weight: 600;
}

.clientBadgeMuted {
  background: rgba(255, 255, 255, 0.08);
  color: rgba(255, 255, 255, 0.55);
}

.carouselSection {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  gap: 10px;
  width: 100%;
  position: relative;
}

.thumbnailCarousel {
  --thumb-column: calc(var(--row-h) * 0.78);
  display: grid;
  grid-auto-flow: column;
  grid-auto-columns: max-content;
  gap: 12px;
  width: 100%;
  justify-content: flex-end;
  align-items: center;
  padding: 4px 0;
}


.thumbnailButton {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
  overflow: hidden;
  border: none;
  padding: 6px;
  margin: 0;
  border-radius: 14px;
  background: transparent;
  color: rgba(255, 255, 255, 0.65);
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.08em;
  transition: transform 0.2s ease, border-color 0.2s ease, background 0.2s ease, box-shadow 0.2s ease;
  height: var(--thumb-column);
  min-width: calc(var(--thumb-column) * 0.66);
  max-width: calc(var(--thumb-column) * 1.6);
  isolation: isolate;
  background-clip: padding-box;
  cursor: pointer;
}

.thumbnailButton img {
  width: auto;
  height: 100%;
  max-width: 100%;
  object-fit: contain;
  object-position: center;
  display: block;
  background-color: transparent;
}

.thumbnailButton:focus-visible {
  outline: 2px solid rgba(250, 51, 86, 0.65);
  outline-offset: 2px;
  box-shadow: 0 0 0 4px rgba(250, 51, 86, 0.2);
}

.thumbnailButton:hover {
  transform: translateY(-2px);
  background: rgba(250, 51, 86, 0.12);
  color: #FA3356;
}

.thumbnailPlaceholder {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(12, 12, 12, 0.65);
  color: rgba(255, 255, 255, 0.65);
}

.selectedPreview {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  gap: 10px;
  width: min(320px, 100%);
}

.selectedPreviewImage {
  width: 100%;
  height: clamp(120px, 18vw, 200px);
  object-fit: cover;
  border-radius: 18px;
  border: 1px solid rgba(255, 255, 255, 0.12);
  box-shadow: 0 18px 38px rgba(0, 0, 0, 0.38);
}

.selectedPreviewFallback {
  width: 100%;
  height: clamp(120px, 18vw, 200px);
  border-radius: 18px;
  background: rgba(17, 17, 17, 0.7);
  display: flex;
  align-items: center;
  justify-content: center;
  border: 1px dashed rgba(255, 255, 255, 0.18);
  color: rgba(255, 255, 255, 0.7);
  box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.04);
}

.selectedSlug {
  font-size: 0.78rem;
  letter-spacing: 0.08em;
  text-transform: uppercase;
  color: rgba(255, 255, 255, 0.68);
  background: rgba(255, 255, 255, 0.06);
  padding: 4px 10px;
  border-radius: 999px;
  align-self: flex-end;
}

.moreTile {
  background: rgba(250, 51, 86, 0.15);
  color: #FA3356;
}

.moreTile:hover {
  background: rgba(250, 51, 86, 0.22);
}

.carouselEdge {
  position: absolute;
  inset-block: 4px;
  width: 32px;
  pointer-events: none;
  opacity: 0;
  transition: opacity 0.2s ease;
  display: none;
}

.carouselEdgeLeft {
  left: 0;
  background: linear-gradient(90deg, rgba(12, 12, 12, 0.95) 0%, rgba(12, 12, 12, 0) 100%);
}

.carouselEdgeRight {
  right: 0;
  background: linear-gradient(270deg, rgba(12, 12, 12, 0.95) 0%, rgba(12, 12, 12, 0) 100%);
}

.viewAllButton {
  align-self: flex-end;
  background: rgba(255, 255, 255, 0.04);
  border: 1px solid rgba(255, 255, 255, 0.18);
  border-radius: 999px;
  padding: 6px 14px;
  font-size: 0.72rem;
  letter-spacing: 0.12em;
  text-transform: uppercase;
  color: #ffffff;
  cursor: pointer;
  transition: background 0.2s ease, border-color 0.2s ease, transform 0.2s ease;
}

.emptyState {
  font-size: 0.82rem;
  opacity: 0.7;
  border: 1px dashed rgba(255, 255, 255, 0.22);
  border-radius: 12px;
  padding: 10px 14px;
  text-align: center;
}

@media (max-width: 768px) {
  .galleryTrigger {
    --row-h: 140px;
    flex-direction: row !important;
    align-items: center !important;
    padding: 16px;
    gap: 10px;
    height: var(--row-h);
    flex-shrink: 0;
  }

  .titleColumn {
    flex: 1 1 54%;
    padding-right: 8px;
  }

  .thumbsColumn {
    flex: 0 1 46%;
    padding-left: 8px;
    justify-content: flex-end;
    align-items: center;
    min-height: auto;
  }

  .carouselSection {
    align-items: center;
    gap: 8px;
  }

  .thumbnailCarousel {
    justify-content: flex-start;
    gap: 10px;
  }

  .thumbnailButton {
    border-radius: 12px;
  }

  .galleryHelperText {
    margin-top: 4px;
    font-size: 0.76rem;
    line-height: 1.3;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

@media (max-width: 540px) {
  .galleryTrigger {
    --row-h: 120px;
    padding: 12px;
    gap: 8px;
    height: var(--row-h);
    flex-shrink: 0;
  }

  .titleColumn {
    flex: 1 1 58%;
  }

  .thumbsColumn {
    flex: 0 1 42%;
  }

  .thumbnailCarousel {
    gap: 8px;
  }
}

@media (max-width: 480px) {
  .thumbnailCarousel {
    overflow-x: auto;
    overscroll-behavior-x: contain;
    scroll-snap-type: x mandatory;
    padding: 6px 12px;
    margin: 0 -12px;
  }

  .thumbnailCarousel::-webkit-scrollbar {
    height: 6px;
  }

  .thumbnailCarousel::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.18);
    border-radius: 999px;
  }

  .thumbnailCarousel::-webkit-scrollbar-track {
    background: transparent;
  }

  .thumbnailButton {
    scroll-snap-align: center;
  }

  .carouselEdge {
    display: block;
    opacity: 1;
  }
}

@media (max-width: 330px) {
  .galleryTrigger {
    --row-h: 100px;
    height: var(--row-h);
    flex-shrink: 0;
  }

  .thumbnailCarousel {
    --thumb-column: 70px;
    gap: 6px;
  }

  .thumbnailButton {
    border-radius: 10px;
  }
}

.triggerIcon {
  margin-right: 12px;
}

.arrow {
  margin-left: 12px;
}

.modalOverlay {
  position: fixed;
  inset: 0;
  z-index: 14000;
  display: flex;
  align-items: flex-end;
  justify-content: center;
  overflow: hidden;
  overscroll-behavior: contain;
  background: rgba(17, 17, 17, 0.38);
  backdrop-filter: blur(8px);
  box-sizing: border-box;
  opacity: 0;
  transition: opacity 0.3s ease;
  padding: clamp(20px, 4vh, 48px) 0;
}

.modalOverlayAfterOpen {
  opacity: 1;
}

.modalOverlayBeforeClose {
  opacity: 0;
}

.modalContent {
  background: rgba(24, 24, 24, 0.98);
  color: #ffffff;
  border: 1px solid rgba(255, 255, 255, 0.08);
  border-radius: 22px 22px 0 0;
  padding: 24px;
  width: min(640px, 100%);
  max-height: calc(100vh - clamp(64px, 12vh, 128px));
  display: flex;
  flex-direction: column;
  align-items: stretch;
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.3s ease, transform 0.3s ease;
  box-shadow: 0 36px 68px rgba(0, 0, 0, 0.55);
  font-family: "Helvetica Neue", "Helvetica Display", sans-serif;
  position: relative;
  overflow: hidden;
}

.modalContentAfterOpen {
  opacity: 1;
  transform: translateY(0);
}

.modalContentBeforeClose {
  opacity: 0;
  transform: translateY(20px);
}

@media (min-width: 720px) {
  .modalOverlay {
    align-items: center;
    padding: clamp(32px, 6vh, 72px) 0;
  }

  .modalContent {
    border-radius: 22px;
  }
}

@media (min-width: 1024px) {
  .modalOverlay {
    padding: clamp(48px, 8vh, 96px) 0;
  }

  .modalContent {
    width: min(720px, 100%);
    border-radius: 28px;
  }
}

.listContainer {
  overflow-y: auto;
  max-height: 320px;
  width: 100%;
  margin: 0 auto 8px;
}

.galleryList {
  list-style-type: none;
  padding: 0;
  margin: 0;
  width: 100%;
}

.listItem {
  padding: 2px 0;
  border-bottom: 1px solid rgba(255, 255, 255, 0.15);
}

.listRow {
  display: flex;
  align-items: center;
  padding: 8px 16px;
  min-height: 36px;
  cursor: pointer;
  transition: background-color 0.2s ease;
  width: 100%;
}

.listRow:hover {
  background-color: rgba(255, 255, 255, 0.05);
}
.listInfo {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  flex: 1;
  min-width: 0;
}

.slugLabel {
  font-size: 0.9em;
  opacity: 0.7;
  color: #aaaaaa;
  word-break: break-word;
  overflow-wrap: anywhere;
}

.actions {
  display: flex;
  gap: 8px;
  opacity: 0;
  transition: opacity 0.2s ease;
  margin-left: auto;
}

.listRow:hover .actions {
  opacity: 1;
}

.hideOnEdit {
  display: none;
}

.newButton {
  margin-bottom: 16px;
  padding: 6px 12px;
  font-size: 14px;
  align-self: flex-start;
}

.listLink {
  color: #ffffff;
  text-decoration: none;
  font-weight: bold;
  font-size: 18px;
  transition: color 0.3s ease;
  word-break: break-word;
  overflow-wrap: anywhere;
}

.listLink:hover {
  color: #FA3356;
}

.activeRow {
  border-left: 4px solid #FA3356;
  background-color: rgba(250, 51, 86, 0.1);
}

.clientRow {
  border-left: 4px solid rgba(110, 123, 255, 0.85);
  background: linear-gradient(90deg, rgba(110, 123, 255, 0.18), rgba(110, 123, 255, 0));
}

.clientGalleryTag {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  margin-top: 6px;
  padding: 4px 10px;
  border-radius: 999px;
  background: rgba(110, 123, 255, 0.18);
  color: rgba(255, 255, 255, 0.82);
  font-size: 0.68rem;
  letter-spacing: 0.08em;
  text-transform: uppercase;
  font-weight: 600;
}

.clientSelectButton {
  position: relative;
}

.clientSelectButtonActive {
  color: #ffd447;
}

.clientSelectButtonActive:hover {
  background-color: rgba(255, 212, 71, 0.12);
}

.clientSelectButton:disabled {
  opacity: 1;
  cursor: default;
}

.modalActions {
  display: flex;
  justify-content: center;
  align-items: center;
  /* Added extra horizontal padding to prevent clipping */
  padding: 8px 20px;
  width: 100%;
  gap: 12px;
  margin-top: 12px;
  /* Allow wrapping so items don't overflow when space is limited */
  flex-wrap: wrap;
}

.iconButton {
  background: transparent;
  border: none;
  color: white;
  padding: 8px;
  cursor: pointer;
  border-radius: 8px;
  transition: background-color 0.2s ease, transform 0.2s ease;
  will-change: transform;
}

.iconButton:hover {
  transform: scale(1.03);
  background-color: rgba(255, 255, 255, 0.1);
}

.hiddenInput {
  display: none;
}

.coverModalIcon {
  margin-bottom: 8px;
}

.coverSelectGrid {
  display: flex;
  flex-wrap: wrap;
  gap: 12px;
  justify-content: center;
  margin: 16px 0;
}

.coverSelectOption {
  cursor: pointer;
  border: 2px solid transparent;
  border-radius: 8px;
  overflow: hidden;
  width: 120px;
  height: 80px;
}

.coverSelectOption img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.coverSelectOption:hover {
  border-color: #FA3356;
}

.emptyMessage {
  padding: 16px;
  text-align: center;
  opacity: 0.7;
}

.formColumn {
  display: flex;
  flex-direction: column;
  width: 100%;
  gap: 8px;
}

.passwordRow {
  display: flex;
  align-items: center;
  gap: 8px;
}

.originalLink {
  display: flex;
  align-items: center;
  gap: 4px;
  margin-bottom: 8px;
  color: #ffffff;
  text-decoration: none;
}

.originalLink:hover {
  text-decoration: underline;
}

.enableLabel {
  display: flex;
  align-items: center;
  gap: 4px;
}

.timeoutGroup {
  display: flex;
  flex-direction: column;
  width: 100%;
  gap: 2px;
}

.timeoutLabel {
  font-size: 15px;
  margin-bottom: 0;
}

.timeoutInput {
  margin-bottom: 0;
}

.timeoutInputRow {
  display: flex;
  align-items: center;
  gap: 8px;
}

.timeoutUnit {
  font-size: 0.9em;
  opacity: 0.7;
}

.helperText {
  font-size: 12px;
  opacity: 0.7;
  margin-top: 2px;
}

.editHeader {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  width: 100%;
  gap: 16px;
  margin-bottom: 8px;
}

.uploadColumn {
  display: flex;
  flex-direction: column;
  width: 100%;
  gap: 8px;
  align-items: center;
}

.dragArea {
  width: 100%;
  padding: 20px;
  border: 2px dashed #FA3356;
  border-radius: 12px;
  text-align: center;
  cursor: pointer;
  position: relative;
}

.dragging {
  border-color: #ffffff;
  background: rgba(255, 255, 255, 0.05);
}

.dragOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.6);
  color: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: none;
  border-radius: 12px;
  font-size: 16px;
  font-weight: bold;
}

.modalInner {
  position: relative;
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 16px;
  overflow-y: auto;
  padding-right: clamp(6px, 2vw, 18px);
}

.modalInnerEmpty {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 280px;
}

.modalDropHint {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 2px dashed #FA3356;
  border-radius: 12px;
  background: rgba(0, 0, 0, 0.6);
  color: #fff;
  font-size: 18px;
  pointer-events: none;
}

.dropHint {
  margin-top: 8px;
  text-align: center;
  opacity: 0.7;
  font-size: 14px;
}

.emptyDropArea {
  width: 100%;
  padding: 40px 20px;
  border: 2px dashed #FA3356;
  border-radius: 12px;
  text-align: center;
  cursor: pointer;
  transition: background 0.2s ease;
}

.emptyDropArea:hover {
  background: rgba(255, 255, 255, 0.05);
}

.emptyDropHint {
  margin: 0;
  font-size: 16px;
  opacity: 0.8;
}

.processingRow {
  opacity: 0.6;
  pointer-events: none;
}

.statusMessage {
  font-size: 0.85em;
  margin-top: 4px;
  opacity: 0.8;
}

.readyIcon {
  margin-left: 6px;
  color: #2ecc71;
}

.thumbnail {
  max-width: 80px;
  max-height: 80px;
  width: auto;
  height: auto;
  border-radius: 20%;
  object-fit: contain;
  border: 2px solid white;
  padding: 5px;
  box-sizing: border-box;
}

.listThumbnail {
  margin-right: 12px;
}

.dotSpinner {
  display: inline-flex;
  justify-content: center;
  align-items: flex-start;  /* <--- instead of center */
  height: 1rem;
  width: 2rem;
  gap: 0.2rem;
  vertical-align: 2.5px; 
}

.dotSpinner div,
.dotSpinner span {
  width: 0.2rem;    /* smaller */
  height: 0.2rem;   /* smaller */
  background-color: #ffffff;
  border-radius: 50%;
  animation: dot-bounce 1.2s infinite ease-in-out;
  transform: translateY(-1px);   /* raises the dots */
}


.inlineSpinner {
  margin-left: 0.25rem;
  transform: translateY(1px); /* slight vertical alignment */
}

.dotSpinner div:nth-child(1) {
  animation-delay: 0s;
}

.dotSpinner div:nth-child(2) {
  animation-delay: 0.2s;
}

.dotSpinner div:nth-child(3) {
  animation-delay: 0.4s;
}

@keyframes dot-bounce {
  0%, 80%, 100% {
    transform: scale(0);
  }
  40% {
    transform: scale(1);
  }
}

/* Donut / circular chart vertical responsiveness
   - Ensures any donut SVG/canvas inside the gallery scales by height as well as width
   - Keeps a 1:1 aspect ratio so the chart stays circular
   - Leaves a small internal gap so it never touches the container edges
*/
.donutContainer,
.galleryDonut,
.BudgetDonut,
.budget-donut,
.donut {
  width: 100%;                 /* keep existing responsive width behavior */
  max-width: 100%;
  aspect-ratio: 1 / 1;         /* keep it square so it's circular */
  max-height: calc(100% - 16px); /* leave 8px padding top & bottom inside container */
  box-sizing: border-box;
  margin: 8px auto;           /* center and add breathing room */
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Ensure svg/canvas inside the container fill the available square area */
.donutContainer > svg,
.donutContainer > canvas,
.galleryDonut svg,
.galleryDonut canvas,
.BudgetDonut svg,
.BudgetDonut canvas,
.budget-donut svg,
.budget-donut canvas,
.donut svg,
.donut canvas {
  width: 100% !important;
  height: 100% !important;
  max-height: 100% !important;
  display: block;
}

/* Leaflet overrides ------------------------------------------------------
   - Make the Leaflet map background and tiles transparent so your
     rounded/dark card background shows through.
   - Use :global(...) because Leaflet injects these classes outside CSS modules.
   - Apply .mapWrapper to the map's parent to clip tiles to a rounded container.
*/

:global(.leaflet-container) {
  background: #000000 !important; /* make the map background black */
  border-radius: inherit; /* inherit the card radius when used inside a rounded container */
}

.mapWrapper {
  /* apply this to the parent element that wraps the leaflet map element */
  border-radius: 16px; /* adjust to match your card radius */
  overflow: hidden;    /* prevents white corners during pan/zoom */
  background: #000000; /* ensure parent is also black to avoid flashes */
}

:global(.leaflet-tile) {
  /* Avoid white while individual tiles are loading */
  background: #000000 !important;
}

/* Optional: if you need to target the map element directly in markup that doesn't
   use CSS modules, you can rely on the global selectors above. */









