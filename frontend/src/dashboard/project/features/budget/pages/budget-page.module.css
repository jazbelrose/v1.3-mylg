:global(.ant-table) {
  background-color: #111111 !important;
  color: white;
  font-size: 14px;
  border-radius: 10px;
}

:global(.ant-table-thead > tr > th) {
  background-color: #1a1a1a !important; /* dark grey header */
  color: #ffffff !important;           /* white header text */
  font-weight: 600;
  white-space: normal !important;
  word-break: break-word;
  padding: 12px;
  border-bottom: 1px solid #2a2a2a;
}

:global(.ant-table-tbody > tr > td) {
  background-color: #111111 !important;
  color: #eaeaea !important;           /* lighter body text */
  white-space: normal !important;
  word-break: break-word;
  padding: 12px;
  border-bottom: 1px solid #2a2a2a;
}

/* Remove bottom border for the placeholder row when no data is present */
:global(.ant-table-tbody > tr.ant-table-placeholder > td) {
  border-bottom: none;
}

:global(.ant-table-container) {
  overflow-x: hidden !important;
}

:global(.ant-table-cell) {
  vertical-align: middle;
  line-height: 1;
}

:global(.ant-pagination),
:global(.ant-table-pagination) {
  background-color: transparent !important;
  color: #ffffff;
 margin: 20px 0 12px !important;
  flex-wrap: wrap;
}

:global(.ant-pagination-item-active) {
  border-color: transparent !important;
}

:global(.ant-pagination-item-active a) {
  color: #FA3356 !important;
}

:global(.ant-pagination-item) {
  border: none !important;
  background: transparent !important;
  margin: 0 2px;
  min-width: 24px;
  height: 24px;
  line-height: 22px;
}

:global(.ant-pagination-prev .ant-pagination-item-link),
:global(.ant-pagination-next .ant-pagination-item-link) {
  border: none !important;
  background: transparent !important;
}

:global(.ant-pagination-options) {
  margin-left: auto;
}

:global(.ant-pagination-options-size-changer .ant-select-selector) {
  background: transparent !important;
  border-color: #FA3356 !important;
  color: #ffffff !important;
  height: 24px !important;
  padding: 0 4px !important;
}

/* Style column sort icons */
:global(.ant-table-column-sorter) {
  color: #fff !important;
}
:global(.ant-table-column-sorter-up.active),
:global(.ant-table-column-sorter-down.active) {
  color: #FA3356 !important;
}

/* Make expand icon button blend into dark theme */
:global(.ant-table-row-expand-icon) {
  background-color: #222 !important;  /* dark circle background */
  

 
  
}

.paymentStatus {
  display: inline-flex;
  align-items: center;
  gap: 4px;
  font-size: 0.7rem;
  color: #cccccc;
}

.statusDot {
  width: 6px;
  height: 6px;
  border-radius: 50%;
  display: inline-block;
}

.costWithStatus {
  display: inline-flex;
  align-items: center;
  gap: 6px;
}

.costWithStatus .statusDot {
  flex-shrink: 0;
}

.elementKeyCell {
  display: inline-flex;
  align-items: center;
}

.elementKeyCell input[type="checkbox"] {
  width: 14px;
  height: 14px;
  margin: 0;
  cursor: pointer;
  accent-color: #FA3356;
}

.paid {
  background-color: #00b050;
}

.partial {
  background-color: #ffd700;
}

.unpaid {
  background-color: #ff4d4f;
}

/* Add a vertical rule to grouping columns */
.groupColumn {
  border-right: 1px solid #2a2a2a;
}

.tableContainer {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.desktopTable {
  display: none;
}

.tableMinHeight {
  display: none;
}
.clickableRow {
  transition: background-color 0.2s ease;
}

.selectedRow {
  background-color: rgba(250, 51, 86, 0.08) !important;
}
.tableMinHeight :global(.ant-spin-nested-loading),
.tableMinHeight :global(.ant-spin-container),
.tableMinHeight :global(.ant-table),
.tableMinHeight :global(.ant-table-container) {
  height: 100%;
  display: flex;
  flex-direction: column;
}

.tableMinHeight :global(.ant-table-body) {
  flex: 1 1 auto;
}

.tableMinHeight :global(.ant-empty) {
  flex: 1 1 auto;
  display: flex;
  align-items: center;
  justify-content: center;
}

.cardListHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 12px;
  flex-wrap: wrap;
}

.selectionCount {
  font-size: 0.7rem;
  letter-spacing: 0.08em;
  text-transform: uppercase;
  color: rgba(255, 255, 255, 0.55);
}

.cardHeaderButton {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  padding: 6px 14px;
  border-radius: 16px;
  border: 1px solid rgba(255, 255, 255, 0.16);
  background: transparent;
  color: rgba(255, 255, 255, 0.85);
  font-size: 0.8rem;
  font-weight: 500;
  letter-spacing: 0.02em;
  cursor: pointer;
  transition: background 0.2s ease, border-color 0.2s ease, color 0.2s ease;
}

.cardHeaderButton:hover,
.cardHeaderButton:focus-visible {
  outline: none;
  background: rgba(255, 255, 255, 0.08);
  border-color: rgba(255, 255, 255, 0.28);
  color: #ffffff;
}

.cardHeaderButton:disabled {
  opacity: 0.45;
  cursor: not-allowed;
  border-color: rgba(255, 255, 255, 0.12);
  background: rgba(255, 255, 255, 0.02);
  color: rgba(255, 255, 255, 0.45);
}

.clearSelectionButton {
  padding: 6px 14px;
  border-radius: 16px;
  border: 1px solid rgba(255, 255, 255, 0.16);
  background: transparent;
  color: rgba(255, 255, 255, 0.85);
  font-size: 0.8rem;
  font-weight: 500;
  letter-spacing: 0.02em;
  cursor: pointer;
  transition: background 0.2s ease, border-color 0.2s ease, color 0.2s ease;
}

.clearSelectionButton:hover,
.clearSelectionButton:focus-visible {
  outline: none;
  background: rgba(255, 255, 255, 0.08);
  border-color: rgba(255, 255, 255, 0.28);
  color: #ffffff;
}

.clearSelectionButton:disabled {
  opacity: 0.45;
  cursor: not-allowed;
  border-color: rgba(255, 255, 255, 0.12);
  background: rgba(255, 255, 255, 0.02);
  color: rgba(255, 255, 255, 0.45);
}

.cardListWrapper {
  display: flex;
  flex-direction: column;
  gap: 12px;
  width: 100%;
}

.cardListWrapperEmpty {
  flex: 1 1 auto;
  justify-content: center;
  align-items: center;
}

.emptyPlaceholder {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  width: 100%;
  padding: 24px;
  gap: 8px;
  color: rgba(255, 255, 255, 0.65);
  font-size: 0.95rem;
}

.cardList {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(640px, 1fr));
  gap: 12px;
  width: 100%;
}

.cardListMobile {
  display: flex !important;
  flex-direction: column;
  gap: 6px;
}

@media (max-width: 1400px) {
  .cardList {
    grid-template-columns: repeat(auto-fill, minmax(520px, 1fr));
  }
}

.card {
  position: relative;
  z-index: 0;
  background: linear-gradient(160deg, rgba(24, 24, 24, 0.95), rgba(9, 9, 9, 0.95));
  border-radius: 20px;
  border: 1px solid #2a2a2a;
  padding: 14px 16px;
  padding-right: 72px;
  display: flex;
  flex-direction: column;
  gap: 12px;
  box-shadow: 0 12px 30px rgba(0, 0, 0, 0.45);
  transition: box-shadow 0.2s ease, border-color 0.2s ease, transform 0.2s ease;
}

.card:hover,
.cardMenuOpen {
  transform: translateY(-2px);
  box-shadow: 0 18px 36px rgba(0, 0, 0, 0.5);
}

.card:hover {
  z-index: 30;
}

.cardMenuOpen {
  z-index: 120;
}

.cardSelected {
  border-color: #FA3356;
  box-shadow: 0 0 0 1px #FA3356, 0 20px 36px rgba(250, 51, 86, 0.25);
}

.cardLocked {
  opacity: 0.6;
}

.cardRow {
  display: flex;
  flex-direction: column;
  gap: 12px;
  width: 100%;
}

.cardPrimary {
  display: flex;
  align-items: flex-start;
  gap: 12px;
  min-width: 0;
}

.cardSummary {
  display: flex;
  flex-direction: column;
  gap: 4px;
  min-width: 0;
}

.cardCheckbox {
  display: flex;
  align-items: center;
  justify-content: center;
  flex: 0 0 auto;
}

.cardCheckbox input {
  width: 16px;
  height: 16px;
  margin: 0;
  accent-color: #FA3356;
}

.cardIdentifiers {
  display: flex;
  flex-direction: row;
  gap: 8px;
}

.cardKey {
  color: #ffffff;
  font-weight: 600;
  font-size: 0.8rem;
  letter-spacing: 0.03em;
  text-transform: uppercase;
}

.cardId {
  color: #bbbbbb;
  font-size: 0.8rem;
  letter-spacing: 0.03em;
  text-transform: uppercase;
}

.cardControls {
  position: absolute;
  top: 12px;
  right: 12px;
  z-index: 20;
  display: inline-flex;
  flex-direction: column;
  align-items: flex-end;
  gap: 8px;
}

.cardMenuTrigger {
  position: relative;
  width: 28px;
  height: 28px;
  border-radius: 999px;
  border: 1px solid #2a2a2a;
  background: #131313;
  color: #eaeaea;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  transition: background 0.2s ease, color 0.2s ease, border-color 0.2s ease;
}

.cardMenuTrigger :global(svg) {
  font-size: 12px;
  transition: transform 0.2s ease;
}

.cardMenuTrigger:hover,
.cardMenuTrigger:focus-visible {
  background: #FA3356;
  border-color: #FA3356;
  color: #ffffff;
}

.cardMenuTriggerActive {
  background: #1d1d1d;
  border-color: #3a3a3a;
}

.cardMenuTriggerActive :global(svg) {
  transform: rotate(180deg);
}

.cardMenu {
  position: absolute;
  top: 100%;
  right: 0;
  margin-top: 8px;
  min-width: 200px;
  padding: 8px 0;
  border-radius: 14px;
  border: 1px solid rgba(250, 51, 86, 0.4);
  background: rgba(15, 15, 15, 0.98);
  box-shadow: 0 18px 40px rgba(0, 0, 0, 0.5);
  display: flex;
  flex-direction: column;
  gap: 4px;
  z-index: 100;
}

.cardMenuItem {
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 8px 16px;
  width: 100%;
  background: transparent;
  border: none;
  color: #f1f1f1;
  font-size: 0.85rem;
  text-align: left;
  cursor: pointer;
  transition: background 0.2s ease, color 0.2s ease;
}

.cardMenuItem:hover,
.cardMenuItem:focus-visible {
  background: rgba(250, 51, 86, 0.14);
  color: #ffffff;
  outline: none;
}

.cardMenuItemDanger {
  color: #ff99aa;
}

.cardMenuItemDanger:hover,
.cardMenuItemDanger:focus-visible {
  background: rgba(250, 51, 86, 0.2);
  color: #ffffff;
}

.cardMenuItemIcon {
  width: 18px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  color: inherit;
}

.cardMenuItemIcon :global(svg) {
  font-size: 14px;
}

@media (max-width: 768px) {
  .card {
    padding-right: 72px;
  }

  .cardMetricRow {
    justify-content: flex-end;
  }

  .cardMetrics {
    align-items: flex-end;
  }
}

.cardEventBadge {
  position: absolute;
  top: -4px;
  right: -4px;
  min-width: 16px;
  height: 16px;
  border-radius: 999px;
  background: #FA3356;
  color: #ffffff;
  font-size: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0 4px;
  line-height: 1;
}

.cardDescription {
  color: #e0e0e0;
  font-size: 0.88rem;
  line-height: 1.25;
  max-width: 100%;
}



.cardMetrics {
  display: flex;
  flex-direction: column;
  gap: 8px;
  flex: 1 1 320px;
  min-width: 220px;
}

.cardMetricRow {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  align-items: baseline;
  justify-content: flex-end;
  width: 100%;
}

.cardMetricRowSummary {
  justify-content: flex-end;
}

.cardMetric {
  display: flex;
  align-items: baseline;
  gap: 4px;
  flex: 0 1 auto;
  min-width: 56px;
  justify-content: flex-end;
  text-align: right;
}

.cardMetricSummary {
  text-align: right;
}

.cardMetricRowSummary .cardMetric {
  justify-content: flex-end;
  text-align: right;
}


.cardMetricLabel {
  font-size: 0.6rem;
  color: #8f8f8f;
  letter-spacing: 0.06em;
  text-transform: uppercase;
  text-align: right;
}

.cardMetricValue {
  font-size: 0.8rem;
  font-weight: 500;
  color: #f5f5f5;
  min-height: 1.1em;
}

.cardMetricRowSummary .cardMetricLabel {
  color: rgba(250, 51, 86, 0.72);
}

.cardMetricRowSummary .cardMetricValue {
  color: rgba(250, 51, 86, 0.88);
}

.cardMetricValue span {
  color: inherit;
}

.cardPayment {
  position: absolute;
  bottom: 6px;
  right: 12px;
  z-index: 10;
}

.cardFooterLabel {
  font-size: 0.75rem;
  color: #888888;
  text-transform: uppercase;
  letter-spacing: 0.08em;
}

.cardFooterValue {
  display: inline-flex;
  align-items: center;
}

@media (max-width: 1200px) {
  .cardList {
    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
  }
}

@media (max-width: 992px) {
  .cardList {
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
  }

  .cardRow {
    gap: 16px;
  }

  .cardMetrics {
    flex: 1 1 100%;
  }

  .cardMetricRow {
    gap: 8px;
  }

  .cardMetric {
    min-width: 88px;
  }
}

@media (max-width: 768px) {
  .desktopTable {
    display: none;
  }

  .card {
    border-radius: 20px;
    padding: 13px 15px;
  }

  .cardRow {
    flex-direction: column;
  }

  .cardPrimary {
    align-items: stretch;
  }

  .cardMetrics {
    gap: 10px;
  }

  .cardMetricRow {
    display: grid;
    grid-template-columns: repeat(5, minmax(56px, 1fr));
    gap: 8px;
    width: 100%;
    justify-content: stretch;
    justify-items: stretch;
  }

  .cardMetric {
    flex: initial;
    min-width: 0;
    flex-direction: column;
    align-items: flex-start;
    gap: 2px;
    text-align: left;
    width: 100%;
  }

  .cardMetricRowSummary {
    display: grid;
    grid-template-columns: repeat(5, minmax(56px, 1fr));
    gap: 8px;
    justify-items: stretch;
    position: relative;
  }

  .cardMetricRowSummary::before {
    content: "";
    position: absolute;
    top: -4px;
    left: 0;
    right: 0;
    height: 1px;
    background: rgba(255, 255, 255, 0.12);
    pointer-events: none;
  }

  .cardMetricRowSummary .cardMetric {
    align-items: flex-start;
    text-align: left;
    justify-self: stretch;
    width: 100%;
  }

  .cardMetricRowSummary .cardMetric:nth-of-type(1) {
    grid-column: 4;
  }

  .cardMetricRowSummary .cardMetric:nth-of-type(2) {
    grid-column: 5;
  }

  .cardMetricLabel {
    text-align: left;
  }

  .cardMetricValue {
    text-align: left;
  }

  .cardPayment {
    bottom: 10px;
    right: 10px;
  }
}

@media (max-width: 480px) {
  .cardMetrics {
    gap: 8px;
  }

  .cardMetricRow {
    grid-template-columns: repeat(5, minmax(48px, 1fr));
    gap: 12px;
  }

  .cardMetricRowSummary {
    gap: 12px;
  }

  .cardMetricRowSummary::before {
    top: -3px;
  }

  .card {
    padding: 12px 14px;
  }

  .cardControls {
    gap: 4px;
  }

  .cardFooterLabel {
    font-size: 0.7rem;
  }

  .cardMetricValue {
    font-size: 0.76rem;
  }
}

@media (min-width: 768px) {
  .cardRow {
    flex-direction: row;
    align-items: center;
    flex-wrap: wrap;
  }

  .cardPrimary {
    align-items: center;
    flex: 1 1 260px;
  }

  .cardDescription {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .cardMetrics {
    justify-content: flex-start;
  }

  .cardControls {
    align-self: center;
    margin-left: auto;
  }
}

@media (max-width: 767px) {
  .cardDescription {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .cardControls {
    align-self: flex-start;
    margin-left: 0;
  }
}

.clickableRow:hover {
  background-color: #222 !important;
  box-shadow: inset 0 0 0 1px #333;
  cursor: pointer;
}



/* Brand color for active Ant switches */
:global(.ant-switch-checked) {
  background-color: #FA3356 !important;
  border-color: #FA3356 !important;
}

:global(.ant-switch-checked:hover) {
  background-color: #FA3356 !important;
  border-color: #FA3356 !important;
}



/* Custom styles for group by segmented control */
:global(.ant-segmented) {
  background: #1a1a1a;
  border-radius: 9999px;
  border: none;
  box-shadow: none;
}
:global(.ant-segmented-item) {
  position: relative;
  z-index: 2;
  color: #ccc;
  padding: 4px 12px;
  transition: background-color 0.2s ease, color 0.2s ease;
}
:global(.ant-segmented-item-selected) {
  color: #fff;
}
:global(.ant-segmented-thumb) {
  z-index: 1;
  background: #222;
  border-radius: 9999px;
  box-shadow: none;
}
:global(.ant-segmented-item:not(.ant-segmented-item-selected):hover) {
  color: #fff;
  box-shadow: none;
}
/* Pagination Arrows */
:global(.ant-pagination-next svg),
:global(.ant-pagination-prev svg),
:global(.ant-pagination-next .anticon),
:global(.ant-pagination-prev .anticon),
:global(.ant-pagination-next button),
:global(.ant-pagination-prev button) {
  color: #fff !important;
  fill: #fff !important;
}

/* Select Arrow (page size dropdown) */
:global(.ant-select-arrow),
:global(.ant-select-arrow svg) {
  color: #fff !important;
  fill: #fff !important;
}
:global(.ant-pagination .anticon svg[fill]) {
  fill: #fff !important;
}

:global(.ant-table-cell-scrollbar) {
  border: none !important;         /* Remove all borders */
  border-bottom: 1px solid white !important; /* Add or customize just the bottom border */
  box-shadow: none !important;
  background: transparent !important;
}

.deleteButton {
  background: transparent;
  border: none;
  color: white;
  padding: 6px;
  cursor: pointer;
  border-radius: 4px;
  transition: background-color 0.2s ease;
  font-size: 12px;
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.deleteButton:hover,
.deleteButton:focus {
  background-color: rgba(255, 255, 255, 0.1);
  outline: none;
}

.duplicateButton {
  background: transparent;
  border: none;
  color: white;
  padding: 6px;
  cursor: pointer;
  border-radius: 4px;
  transition: background-color 0.2s ease;
  font-size: 12px;
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.duplicateButton:hover,
.duplicateButton:focus {
  background-color: rgba(255, 255, 255, 0.1);
  outline: none;
}

.calendarButton {
  position: relative;
  background: transparent;
  border: none;
  color: white;
  padding: 6px;
  cursor: pointer;
  border-radius: 4px;
  transition: background-color 0.2s ease;
  font-size: 12px;
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.calendarButton:hover,
.calendarButton:focus {
  background-color: rgba(255, 255, 255, 0.1);
  outline: none;
}

.eventBadge {
  position: absolute;
  top: -4px;
  right: -4px;
  width: 14px;
  height: 14px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 10px;
  background: #FA3356;
  color: #fff;
  border-radius: 50%;
}

.actionButtons {
  display: flex;
  align-items: center;
  gap: 8px;
  justify-content: center;
}

.dimmed {
  color: #777;
}

.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(0, 0, 0, 0.75);
  z-index: 1000;
  box-sizing: border-box;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.modalOverlayAfterOpen {
  opacity: 1;
}

.modalOverlayBeforeClose {
  opacity: 0;
}

.modalContent {
  background: #0c0c0c;
  color: white;
  border: 2px solid #ffffff;
  border-radius: 16px;
  padding: 22px;
  width: 90%;
  max-width: 600px;
  max-height: 80vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  opacity: 0;
  transform: translateY(-20px);
  transition: opacity 0.3s ease, transform 0.3s ease;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.35);
  font-family: "Helvetica Neue", "Helvetica Display", sans-serif;
}

.modalContentAfterOpen {
  opacity: 1;
  transform: translateY(0);
}

.modalContentBeforeClose {
  opacity: 0;
  transform: translateY(-20px);
}

.dimmedCost {
  opacity: 0.5;
}

.lockedRow {
  opacity: 0.5;
  pointer-events: none;
}

.eventDots {
  display: flex;
  gap: 2px;
  flex-wrap: wrap;
  justify-content: center;
}

.eventDot {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  line-height: 1;
  font-size: 6px;
}






